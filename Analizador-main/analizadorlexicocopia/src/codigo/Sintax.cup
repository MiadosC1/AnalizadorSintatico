package codigo;

import java_cup.runtime.Symbol;

parser code
{:
    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
}
:};

terminal Pregunta, Contrario, Comparar, Identificador, Literal, Numero, Operaciones, Tipodato,
    Acceso, ControlFlujo, Constantes, OperadoresEspeciales, ManejoErrores, Reservadas,
    Asignacion, Incremento, Decremento, Punto, Logico, Bits, Relacional, Funciones, Clases,
    Excepciones, EspacioNombre, Herencia, Modificadores, Variables, Ciclos, Condiciones,
    E_S, Require, Punteros, Genericos, Concurrencia, OtrosReservados, Aserciones,
    Comentarios, TipadoDebil, EstructurasAdicionales, Streams, Metaprogramacion, 
    OtrosValores, Alias, Seguridad, ManejoMemoria, Archivos, Redes, Web, Contexpr,
    Conceptos, Sincronizacion, Basededatos, Vectores, FuncionesEspeciales, CiclosEspeciales,
    TiposEspeciales, Otros, EscrituraPantalla, FinalizarPrograma, Opcionales, Iteradores,
    Conversiones, CodigosRetorno, Estados, EstructuraCondicional, VariablesEspeciales,
    LiteralesEspeciales, Serializacion, Tiempo, Random, Recursos, Logs, Enums, Declaraciones,
    Generadores, Modularizacion, OperacionesMatematicas, Matrices, Compilacion, Versiones, 
    Git, SeguridadWeb, Anotaciones, Proxies, Reflexion, Identificiadores, NumeroEntero,
    NumeroDecimal, NumerosHexadecimal, Caracter, Cadena, EnlaceExterno, LlaveApertura, LlaveCerradura,
    ParentesisApertura, ParentesisCerradura, CorcheteApertura, CorcheteCerradura, Delimitador, ERROR;

non terminal SENTENCIA, ESPACIO, VARIABLE, FUNCIONES, CONDICIONPREGUNTA, CICLOPARA, IMPRESION, INICIAR, DECISION, MIENTRAS;

start with SENTENCIA;

SENTENCIA ::= ESPACIO | VARIABLE | FUNCIONES | CONDICIONPREGUNTA | CICLOPARA | IMPRESION | INICIAR | DECISION | MIENTRAS;


ESPACIO ::= Acceso Modificadores Identificador LlaveApertura SENTENCIA LlaveCerradura;

/* public class MiClase
{
    SENTENCIA
}
*/

VARIABLE ::= Tipodato Identificador Asignacion Cadena Delimitador;

/*String nombre = "Juan";*/

FUNCIONES ::= Tipodato Identificador ParentesisApertura ParentesisCerradura LlaveApertura SENTENCIA LlaveCerradura;

/*int sumar()
{
    SENTENCIA
}
*/

CONDICIONPREGUNTA ::= Pregunta ParentesisApertura Identificador Comparar NumeroDecimal ParentesisCerradura LlaveApertura SENTENCIA LlaveCerradura;

/*if (edad > 18)
{
    SENTENCIA
}
*/
    
CICLOPARA ::= Ciclos ParentesisApertura Tipodato Identificador Asignacion NumeroEntero Delimitador Identificador Comparar NumeroEntero Delimitador 
               Identificador Incremento ParentesisCerradura LlaveApertura SENTENCIA LlaveCerradura;

/*for (int i = 0; i < 10; i++)
{
    SENTENCIA
}
*/

IMPRESION ::= E_S ParentesisApertura Cadena ParentesisCerradura Delimitador;

/*print("Hola mundo");*/

INICIO ::= Tipodato Identificador ParentesisApertura ParentesisCerradura LlaveApertura SENTENCIA LlaveCerradura;

/*int main()
{
    SENTENCIA
}*/


DECISION ::=         Logico
                     | Identificador Comparar Numero
                     | Identificador Comparar Identificador
                     | Identificador Comparar Literal
                     | Identificador Comparar Cadena
                     ;
/*
true                   
x >= 10                      
x == y                        
texto == ""                  
texto == "mensaje" 
*/


EMPEZAR ::= FuncionesEspeciales Identificador Delimitador;

/*start with INICIO;*/


MIENTRAS ::= Ciclos ParentesisApertura DECISION ParentesisCerradura LlaveApertura SENTENCIA LlaveCerradura;

/*while (x < 10)
{
    SENTENCIA
}
*/
