package codigo;
import java_cup.runtime.Symbol;

parser code
{:
    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
    }
:};

/*Ricardo Ibarra Garcia 22211585*/

terminal Linea, Pregunta, Contrario, Comparar, Identificador, Literal, Operaciones, Tipodato,
    Acceso, ControlFlujo, Constantes, OperadoresEspeciales, ManejoErrores, Reservadas,
    Asignacion, Incremento, Decremento, Punto, Logico, Bits, Relacional, Funciones, Clases,
    Excepciones, EspacioNombre, Herencia, Modificadores, Variables, Ciclos, Condiciones,
    ES, Require, Punteros, Genericos, Concurrencia, OtrosReservados, Aserciones,
    Comentarios, TipadoDebil, EstructurasAdicionales, Streams, Metaprogramacion, 
    OtrosValores, Alias, Seguridad, ManejoMemoria, Archivos, Redes, Web, Contexpr,
    Conceptos, Sincronizacion, Basededatos, Vectores, FuncionesEspeciales, CiclosEspeciales,
    TiposEspeciales, Otros, EscrituraPantalla, FinalizarPrograma, Opcionales, Iteradores,
    Conversiones, CodigosRetorno, Estados, EstructuraCondicional, VariablesEspeciales,
    LiteralesEspeciales, Serializacion, Tiempo, Random, Recursos, Logs, Enums, Declaraciones,
    Generadores, Modularizacion, OperacionesMatematicas, Matrices, Compilacion, Versiones, 
    Git, SeguridadWeb, Anotaciones, Proxies, Reflexion, Identificiadores, NumeroEntero,
    NumeroDecimal, NumeroHexadecimal, Caracter, Cadena, EnlaceExterno, LlaveApertura, LlaveCerradura,
    ParentesisApertura, ParentesisCerradura, CorcheteApertura, CorcheteCerradura, Delimitador, ERROR;

non terminal INSTRUCCION, GRAMATICA, IMPRIMIDA, VARIABLE, INICIAR, DECISION, COMPARADOR, MIENTRAS, CONDICIONPREGUNTA, ESPACIO, CICLOPARA;


start with GRAMATICA;


GRAMATICA ::= IMPRIMIDA
              |VARIABLE
              |INICIAR
              |DECISION
              |COMPARADOR
              |MIENTRAS
              |CONDICIONPREGUNTA
              |ESPACIO
              |CICLOPARA
              ;

/*print("Ricardo");*/
IMPRIMIDA ::= ES ParentesisApertura Literal ParentesisCerradura Delimitador
;

/*Int edad = 25;|string nombre = "Ricardo";*/
VARIABLE ::= Tipodato Identificador Asignacion (NumeroEntero|Literal) Delimitador            
;

/*Int main()
{
    GRAMATICA
}*/
INICIAR ::= Tipodato FuncionesEspeciales ParentesisApertura ParentesisCerradura LlaveApertura GRAMATICA LlaveCerradura;

/*
true
x >= 10
x == y
*/
DECISION ::= Logico|COMPARADOR (NumeroEntero|Identificador);

/*
x >=
x ==
*/
COMPARADOR ::= Identificador Comparar;


/*
while (x < 10)
{
    GRAMATICA
}
*/
MIENTRAS ::= Ciclos ParentesisApertura COMPARADOR NumeroEntero ParentesisCerradura LlaveApertura GRAMATICA LlaveCerradura;


/*if (edad > 18)
{
    GRAMATICA
}
*/
CONDICIONPREGUNTA ::= Pregunta ParentesisApertura COMPARADOR NumeroEntero ParentesisCerradura LlaveApertura GRAMATICA LlaveCerradura;

/* public class MiClase
{
    SENTENCIA
}
*/
ESPACIO ::= Acceso Reservadas Identificador LlaveApertura GRAMATICA LlaveCerradura;

/*for (Int i = 0; i < 10; i++)
{
    SENTENCIA
}
*/
CICLOPARA ::= Ciclos ParentesisApertura Tipodato Identificador Asignacion NumeroEntero Delimitador Identificador Comparar NumeroEntero Delimitador 
               Identificador Incremento ParentesisCerradura LlaveApertura GRAMATICA LlaveCerradura;


